{"name":"Cordova-plugin-audioinput","tagline":"This plugin captures the device's microphone and forwards the raw audio data to your HTML5 app.","body":"# cordova-plugin-audioinput\r\n\r\nCordova plugin which provides real-time audio data capture from the device's microphone.\r\nIt can be used for apps that apply effects to microphone input using for example the HTML5 Web Audio API.\r\n\r\nSince 'Navigator.getUserMedia()' isn't supported by all browsers, this plugin enables similar functionality by forwarding raw audio data to the HTML5 app using continuous callbacks.\r\n\r\nIt adds the following `window` event:\r\n\r\n* audioinput\r\n\r\n## Installation\r\n\r\n```\r\ncordova plugin add cordova-plugin-audioinput\r\n```\r\n\r\nor\r\n\r\n```\r\ncordova plugin add https://github.com/edimuj/cordova-plugin-audioinput.git\r\n```\r\n\r\n## Supported Platforms\r\n\r\n* Android\r\n\r\n(iOS support is on the way.)\r\n\r\n## Example\r\n\r\nDefine a callback function to receive audio input data. It will continuously be called during capture:\r\n\r\n```javascript\r\nfunction onAudioInput(evt) {\r\n    \r\n    // 'evt.data' is an integer array containing normalized audio data.\r\n    //   \r\n    console.log(\"Audio data received: \" + evt.data.length + \" samples\");\r\n    \r\n    // ... do something with the evt.data array ...\r\n}\r\n\r\n// Listen to audioinput events.\r\nwindow.addEventListener(\"audioinput\", onAudioInput, false);\r\n```\r\n\r\nAfter the Cordova `deviceready` event has fired:\r\n\r\n```javascript\r\nvar captureCfg = {\r\n    sampleRate: 44100,\r\n    bufferSize: 8192, \r\n    channels: 1,\r\n    format: 'PCM_16BIT'\r\n};\r\n\r\n// Start capturing audio from the microphone\r\naudioinput.start(captureCfg);\r\n\r\n// Stop capturing audio input\r\naudioinput.stop()\r\n```\r\n\r\n## Demo\r\nThe `demo` folder contains an simple example where the captured microphone audio data is used to playback the audio to the device speaker using the Web Audio API.\r\n\r\n## API\r\n\r\nStart capturing audio from the microphone:\r\n\r\n```javascript\r\naudioinput.start(captureCfg);\r\n```\r\n\r\nWhere `captureCfg` can contain any of the following parameters (Please note that not all configurations are supported by all devices):\r\n\r\n```javascript\r\nvar captureCfg = {\r\n    sampleRate: 44100, // The Sample Rate in Hz. Default: 44100.\r\n    bufferSize: 8192, // Maximum size in bytes of the capture buffer. Default: 16384.\r\n    channels: 1, // The number of channels to use: Mono (1) or Stereo (2). Default: 1.\r\n    format: 'PCM_16BIT' // The audio format. Currently PCM_16BIT and PCM_8BIT are supported. Default: 'PCM_16BIT'.\r\n};\r\n```\r\n\r\nStop capturing audio from the microphone:\r\n\r\n```javascript\r\naudioinput.stop();\r\n```\r\n\r\n##Credits\r\n\r\nThe plugin is created and maintained by Edin Mujkanovic.","google":"UA-72594064-1","note":"Don't delete this file! It's used internally to help with page regeneration."}